procedure p; Select p.procName such that not Calls*(_,_)
procedure p; procedure q; Select <p.procName,q> such that not Calls*(_,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(_,"First")
procedure p; Select BOOLEAN such that not Calls*("First",_)
procedure p; Select BOOLEAN such that not Calls*("Fourth",_)
procedure p; Select p such that not Calls*("First","Second")
procedure p; Select p such that not Calls*("Sixth","Second")
procedure p; Select p such that not Calls*(_,p)
procedure p; Select p such that not Calls*(_,p) and not Calls*(_,"First")
procedure p; Select p.procName such that not Calls*("Fifth",p)
procedure p; Select p.procName such that not Calls*("Fourth",p)
procedure p; Select p.procName such that not Calls*(p,_)
procedure p; Select p.procName such that not Calls*(p,_)
procedure p; Select p.procName such that not Calls*(p,"Third")
procedure p; Select p.procName such that not Calls*(p, "First")
procedure p,q; Select <p,q> such that not Calls*(p, q)
procedure p,q,z; Select <p,q,z> such that not Calls*(p, q) such that not Calls*(q,z)
procedure p1,p2,p3,p4,p5; Select <p1,p2,p3,p4,p5> such that not Calls*(p1, p2) and not Calls*(p2,p3) such that not Calls*(p3,p4) and not Calls*(p4,p5)
procedure p1,p2,p3,p4,p5,p6; Select p1 such that not Calls*(p1, p2) and not Calls*(p2,p3) and not Calls*(p3,p4) and not Calls*(p4,p5) and not Calls*(p5, p6)
procedure p; Select p.procName such that not Calls*(p,"Fourth")
procedure p; Select p.procName such that not Calls*(p,"Fifth")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Third") and not Calls*(q, p)
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that not Calls*(p,"Fourth") and not Calls*(q,"Sixth") and not Calls*(r, q)
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Second") and not Calls*(q, p)
procedure p; Select p.procName such that not Calls*(p,"Fourth") and not Calls*(p,"Fifth")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Fifth") and not Calls*(q,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Sixth") and not Calls*(q,"Fourth")
procedure p1,p2,p3,p4,p5; Select <p1,p2,p3,p4,p5> such that not Calls*(p1, p2) and not Calls*(p2,p3) and not Calls*(p3,p4) and not Calls*(p4,p5) and not Calls*(p5, p1)
procedure p; Select p.procName such that not Calls*(p,"Second") and not Calls*(p,"Third")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Fifth") and not Calls*(q,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that not Calls*(p,"Sixth") and not Calls*(q,"Fourth")
procedure p1,p2,p3,p4,p5,p6; Select <p1,p2,p3,p4,p5,p6> such that not Calls*(p1, p2) and not Calls*(p2,p3) and not Calls*(p3,p4) and not Calls*(p4,p5) and not Calls*(p5,p6) and not Calls*(p6,p1)
procedure p; Select p.procName such that not Calls*(p,"Second") and not Calls*(p,"Third")
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that not Calls*(p,"Second") and not Calls*(q,p) and not Calls*(r,q)
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that not Calls*(p,"Third") and not Calls*(q,p) and not Calls*(r,q)
procedure p; Select p such that not Modifies(p, _)
procedure p; Select BOOLEAN such that not Modifies(p, _)
procedure p; variable v; Select p such that not Modifies(p, v)
procedure p; variable v; Select v such that not Modifies(p, v)
procedure p; procedure q; Select p such that not Modifies(p, q)
procedure p; procedure q; Select q such that not Modifies(p, q)
procedure p; procedure q; Select BOOLEAN such that not Modifies(p, q)
procedure p; procedure q; Select BOOLEAN such that not Modifies(q, p)
procedure p; variable v; Select v such that not Modifies(p, v)
procedure q; variable v; Select q such that not Modifies(q, v)
procedure p; variable v; Select BOOLEAN such that not Modifies(p, v)
procedure q; variable v; Select BOOLEAN such that not Modifies(q, v)
stmt s; read r; Select s such that not Next(r, s)
procedure FizzBuzz; print p; Select s such that not Next(p, s)
procedure InnerProcedure; if ifs; Select s such that not Next(ifs, s)
procedure AnotherProcedure; call c; Select s such that not Next(c, s)
stmt s; while w; assign a; Select s such that not Next(a, s) and Parent(w, s)
stmt s; while w; assign a; Select s such that not Next(a, s) and Parent(w, s)
assign a; call c; Select a, s such that not Next(c, a) and not Next(c, s)
while w; if ifs; Select ifs, s such that not Next(w, ifs) and not Next(ifs, s)
if ifs; while w; Select ifs, s such that not Next(ifs, w) and not Next(w, s)
if ifs; Select ifs such that not Next(ifs, 5)
stmt s; Select s such that not Next(_, 10)
if ifs; Select s such that not Next(ifs, s)
while w; Select w such that not Next(w, 8)
while w; Select w such that not Next(w, 1)
if ifs; while w; Select ifs, w.stmt# such that not Next(ifs, 11)
if ifs; while w; Select ifs, w such that not Next(3, w)
while w; Select w such that not Next(w, 7)
procedure p; Select p such that not Next(p, 2)
procedure p; Select p.procName such that not Next(p, 7)
while w; Select w such that not Next(w, 6)
assign a; while w; Select a, w such that not Next(a, w)
assign a; while w; Select a, w such that not Next(a, w) and not Next(9, w)
if ifs1; if ifs2; Select <ifs1, ifs2> such that not Next(ifs1, ifs2)
while w; assign a; Select <w, a> such that not Next(w, a)
while w; call c; Select <w, c> such that not Next(w, c)
procedure p; if ifs; Select <p, ifs> such that not Next(p, ifs)
assign a1; assign a2; Select <a1, a2> such that not Next(a1, a2)
read r; print p; Select <r, p> such that not Next(r, p)
while w; return r; Select <w, r> such that not Next(w, r)
if ifs; return r; Select <ifs, r> such that not Next(ifs, r)
call c; if ifs; Select <c, ifs> such that not Next(c, ifs)
constant c; Select c with not c.value=1
constant c; Select c with not 0=c.value
constant c; Select c with not c.value=0 and c.value=1
variable v; Select v with not "x"=v.varName
variable v; Select v with not v.varName="x"
stmt s; Select s with not s.stmt#=5
procedure p; Select p with not p.procName="FizzBuzz"
read r; Select r with not r.varName="i"
call c; Select c with not c.procName="InnerProcedure"
assign a; Select a with not a.varName="fizz"
if i; Select i with not i.condition="fizz == 0"
print p; Select p with not p.stmt#=8
call c; Select c with not c.stmt#=12
while w; Select w with not w.stmt#=15
if i; Select i with not i.stmt#=20
assign a; Select a with not a.stmt#=25
variable v; Select v with not v.varName="x" and v.stmt#=30
print p; Select p with not p.varName="a" and p.stmt#=39
constant c; Select c with not c.value=10 and c.stmt#=40
read r; Select r with not r.varName="z" and r.stmt#=45
call c; Select c with not c.procName="AnotherProcedure" and c.stmt#=50
while w; Select w with not w.procName="FizzBuzz"
if i; Select i with not i.procName="Dummy"
procedure FizzBuzz; Select FizzBuzz.procName such that not Uses(FizzBuzz, _)
procedure FizzBuzz; read r; Select r such that not Uses(FizzBuzz, _)
procedure FizzBuzz; variable v; Select FizzBuzz such that not Uses(FizzBuzz, v)
procedure FizzBuzz; variable v; Select v such that not Uses(FizzBuzz, v)
procedure procedure; Select procedure such that not Uses(procedure, "q")
procedure procedure; Select procedure such that not Uses(procedure, "y")
if ifs; Select ifs such that not Uses("r", _)
if ifs; Select ifs such that not Uses("f", _)
variable v; Select v such that not Uses("q", v)
print p; Select p such that not Uses("r", "i")
procedure InnerProcedure; Select InnerProcedure.procName such that not Uses(InnerProcedure, _)
procedure InnerProcedure; read r; Select r such that not Uses(InnerProcedure, _)
procedure InnerProcedure; variable v; Select InnerProcedure such that not Uses(InnerProcedure, v)
procedure InnerProcedure; variable v; Select v such that not Uses(InnerProcedure, v)
procedure InnerProcedure; Select InnerProcedure such that not Uses(InnerProcedure, "q")
procedure InnerProcedure; Select InnerProcedure such that not Uses(InnerProcedure, "y")
if ifs; Select ifs such that not Uses("r", _)
if ifs; Select ifs such that not Uses("f", _)
variable v; Select v such that not Uses("q", v)
print p; Select p such that not Uses("r", "i")
procedure AnotherProcedure; Select AnotherProcedure.procName such that not Uses(AnotherProcedure, _)
procedure AnotherProcedure; read r; Select r such that not Uses(AnotherProcedure, _)
procedure AnotherProcedure; variable v; Select AnotherProcedure such that not Uses(AnotherProcedure, v)
procedure AnotherProcedure; variable v; Select v such that not Uses(AnotherProcedure, v)
procedure AnotherProcedure; Select AnotherProcedure such that not Uses(AnotherProcedure, "q")
procedure AnotherProcedure; Select AnotherProcedure such that not Uses(AnotherProcedure, "y")
if ifs; Select ifs such that not Uses("r", _)
if ifs; Select ifs such that not Uses("f", _)
variable v; Select v such that not Uses("q", v)
print p; Select p such that not Uses("r", "i")
