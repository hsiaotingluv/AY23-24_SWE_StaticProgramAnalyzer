// ai-gen start(copilot, 1, e)
// prompt: used copilot - Additional comments: generate far far more test cases similar to the ones given
stmt s; read r; Select s such that Next(r, s)
procedure FizzBuzz; print p; Select s such that Next(p, s)
procedure InnerProcedure; if ifs; Select s such that Next(ifs, s)
procedure AnotherProcedure; call c; Select s such that Next(c, s)
stmt s; while w; assign a; Select s such that Next(a, s) and Parent(w, s)
stmt s; while w; assign a; Select s such that Next(a, s) and Parent(w, s)
assign a; call c; Select a, s such that Next(c, a) and Next(c, s)
while w; if ifs; Select ifs, s such that Next(w, ifs) and Next(ifs, s)
if ifs; while w; Select ifs, s such that Next(ifs, w) and Next(w, s)
if ifs; Select ifs such that Next(ifs, 5)
stmt s; Select s such that Next(_, 10)
if ifs; Select s such that Next(ifs, s)
while w; Select w such that Next(w, 8)
while w; Select w such that Next(w, 1)
if ifs; while w; Select ifs, w.stmt# such that Next(ifs, 11)
if ifs; while w; Select ifs, w such that Next(3, w)
while w; Select w such that Next(w, 7)
procedure p; Select p such that Next(p, 2)
procedure p; Select p.procName such that Next(p, 7)
while w; Select w such that Next(w, 6)
assign a; while w; Select a, w such that Next(a, w)
assign a; while w; Select a, w such that Next(a, w) and Next(9, w)
if ifs1; if ifs2; Select <ifs1, ifs2> such that Next(ifs1, ifs2)
while w; assign a; Select <w, a> such that Next(w, a)
while w; call c; Select <w, c> such that Next(w, c)
procedure p; if ifs; Select <p, ifs> such that Next(p, ifs)
assign a1; assign a2; Select <a1, a2> such that Next(a1, a2)
read r; print p; Select <r, p> such that Next(r, p)
while w; return r; Select <w, r> such that Next(w, r)
if ifs; return r; Select <ifs, r> such that Next(ifs, r)
call c; if ifs; Select <c, ifs> such that Next(c, ifs)
// ai-gen end
