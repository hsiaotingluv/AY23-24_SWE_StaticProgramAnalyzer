// ai-gen start(copilot, 1, e)
// prompt: used copilot - Additional comments: generate far far more test cases similar to the ones given
procedure p; Select p.procName such that Calls*(_,_)
procedure p; procedure q; Select <p.procName,q> such that Calls*(_,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that Calls*(_,"First")
procedure p; Select BOOLEAN such that Calls*("First",_)
procedure p; Select BOOLEAN such that Calls*("Fourth",_)
procedure p; Select p such that Calls*("First","Second")
procedure p; Select p such that Calls*("Sixth","Second")
procedure p; Select p such that Calls*(_,p)
procedure p; Select p such that Calls*(_,p) and Calls*(_,"First")
procedure p; Select p.procName such that Calls*("Fifth",p)
procedure p; Select p.procName such that Calls*("Fourth",p)
procedure p; Select p.procName such that Calls*(p,_)
procedure p; variable v; Select p.procName such that Calls*(p,_) with p.procName=v.varName
procedure p; Select p.procName such that Calls*(p,"Third")
procedure p; Select p.procName such that Calls*(p, "First")
procedure p,q; Select <p,q> such that Calls*(p, q)
procedure p,q,z; Select <p,q,z> such that Calls*(p, q) such that Calls*(q,z)
procedure p1,p2,p3,p4,p5; Select <p1,p2,p3,p4,p5> such that Calls*(p1, p2) and Calls*(p2,p3) such that Calls*(p3,p4) and Calls*(p4,p5)
procedure p1,p2,p3,p4,p5,p6; Select p1 such that Calls*(p1, p2) and Calls*(p2,p3) and Calls*(p3,p4) and Calls*(p4,p5) and Calls*(p5, p6)
procedure p; Select p.procName such that Calls*(p,"Fourth")
procedure p; Select p.procName such that Calls*(p,"Fifth")
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Third") and Calls*(q, p)
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that Calls*(p,"Fourth") and Calls*(q,"Sixth") and Calls*(r, q)
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Second") and Calls*(q, p)
procedure p; Select p.procName such that Calls*(p,"Fourth") and Calls*(p,"Fifth")
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Fifth") and Calls*(q,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Sixth") and Calls*(q,"Fourth")
procedure p1,p2,p3,p4,p5; Select <p1,p2,p3,p4,p5> such that Calls*(p1, p2) and Calls*(p2,p3) and Calls*(p3,p4) and Calls*(p4,p5) and Calls*(p5, p1)
procedure p; Select p.procName such that Calls*(p,"Second") and Calls*(p,"Third")
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Fifth") and Calls*(q,"Sixth")
procedure p; procedure q; Select <p.procName,q> such that Calls*(p,"Sixth") and Calls*(q,"Fourth")
procedure p1,p2,p3,p4,p5,p6; Select <p1,p2,p3,p4,p5,p6> such that Calls*(p1, p2) and Calls*(p2,p3) and Calls*(p3,p4) and Calls*(p4,p5) and Calls*(p5,p6) and Calls*(p6,p1)
procedure p; Select p.procName such that Calls*(p,"Second") and Calls*(p,"Third")
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that Calls*(p,"Second") and Calls*(q,p) and Calls*(r,q)
procedure p; procedure q; procedure r; Select <p.procName,q,r> such that Calls*(p,"Third") and Calls*(q,p) and Calls*(r,q)
// ai-gen end
